!function(n){var e={};function a(t){if(e[t])return e[t].exports;var _=e[t]={i:t,l:!1,exports:{}};return n[t].call(_.exports,_,_.exports,a),_.l=!0,_.exports}a.m=n,a.c=e,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var _ in n)a.d(t,_,function(e){return n[e]}.bind(null,_));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="",a(a.s=18)}([function(n,e){var a=window.iframely=window.iframely||{};a.config=a.config||{},n.exports=a},,,,,,,,,,,,,,,,,,function(n,e,a){var t=a(0),_=a(19),r=a(21);t.buildOptionsForm=function(n){_({id:n.id,formContainer:n.formContainer,options:n.options,renderer:r})}},function(n,e,a){var t=a(20),_=a(0),r={checkbox:{getValue:function(n){return n[0].checked}},text:{customEvents:function(n,e){var a=n[0];_.addEventListener(a,"click",function(){a.select()}),_.addEventListener(a,"blur",e),_.addEventListener(a,"keyup",function(n){13===n.keyCode&&e()})}},radio:{getValue:function(n){var e;return n.forEach(function(n){n.checked&&(e=n)}),e.value}}},i={};n.exports=function(n){var e=n.options,a=n.formContainer;if(e){var l=t(e,n.translator),p=n.id,o=n.renderer,c=i[p]=i[p]||{};Object.keys(e).forEach(function(n){e.query&&-1!==e.query.indexOf(n)||(c[n]=e[n].value)});var s=function(n){var e="";return n.forEach(function(n){n.context&&n.context.elements&&(n.context.elementsHtml=s(n.context.elements)),e+=o(n.type,n.context||{})}),e};a.innerHTML=s(l);var u=function(n){n.forEach(function(n){if(n.context&&n.context.elements)u(n.context.elements);else{var e=r[n.type];n.context&&(n.inputs=a.querySelectorAll('[name="'+n.context.key+'"]'),n.inputs.length>0?e&&e.customEvents?e.customEvents(n.inputs,d):n.inputs.forEach(function(n){_.addEventListener(n,"change",d)}):console.warn("No inputs found for option",n.key))}})};u(l)}else a.innerHTML="";function d(){var n=function(){var n={},e=function(a){a.forEach(function(a){if(a.context&&a.context.elements)e(a.context.elements);else if(a.inputs){var t,_=r[a.type];t=_&&_.getValue?_.getValue(a.inputs):a.inputs[0].value,Object.assign(n,a.getQuery(t))}})};return e(l),n}();Object.keys(c).forEach(function(e){c[e]!==n[e]&&void 0!==n[e]||delete n[e]}),_.trigger("options-changed",p,a,n)}}},function(n,e){var a=/^_./,t=function(n,e){return e&&"function"==typeof e&&e(n)||n};n.exports=function(n,e){if(!n)return[];delete(n=Object.assign({},n)).query;var _=[],r=Object.keys(n),i=0;if(r.forEach(function(r){var l,p,o={},c=n[r];c.key=r;var s,u,d=c.values&&Object.keys(c.values);if(d&&1===d.length&&(p=!0,s=d[0],u=c.values[s]),o.label=t(u||c.label,e),o.key=c.key,p||"boolean"==typeof c.value)o.checked=p?s===c.value||!s&&!c.value:c.value,i++,_.push({type:"checkbox",context:o,order:a.test(r)?0:1,getQuery:function(n){var e;e=p?n?s:"":n;var a={};return p?""===e||(a[c.key]=e):a[c.key]=n,a}});else if("number"!=typeof c.value&&"string"!=typeof c.value||c.values){if(c.values)if(o.value=c.value+"",l=function(n){var e={};return""===n||(e[c.key]=n),e},Object.keys(c.values).length<=3){c.label?o.label=t(c.label,e):o.label=!1;for(var m=0,f=!1,h=Object.values(c.values);m<h.length&&!f;){f=h[m].length>8,m++}o.inline=!f,o.items=[],Object.keys(c.values).forEach(function(n,e){o.items.push({id:o.key+"-"+e,value:n,label:c.values[n],checked:o.value===n})}),_.push({type:"radio",context:o,order:f?-3:/theme/.test(r)?-1:-2,getQuery:l})}else o.items=[],Object.keys(c.values).forEach(function(n){o.items.push({value:n,label:t(c.values[n],e),checked:o.value===n})}),_.push({type:"select",context:o,order:5,getQuery:l})}else{var v=c.range&&"number"==typeof c.range.min&&"number"==typeof c.range.max;o.value=c.value,l=function(n){var e={};return""===n||(e[c.key]=n),e},v?(o.min=c.range.min,o.max=c.range.max,_.push({type:"range",context:o,order:9,getQuery:l})):(o.placeholder=c.placeholder||"",_.push({type:"text",context:o,order:/start/i.test(r)?7:8,getQuery:l}))}}),_.sort(function(n,e){return n.order-e.order}),_.forEach(function(n){delete n.order}),i>0){var l,p=[];return _.forEach(function(n,e){if("checkbox"===n.type){var t=i>2&&e>0&&!a.test(n.context.key)&&"checkbox"===_[e-1].type&&a.test(_[e-1].context.key);l&&!t||(l=[],p.push({type:"group",context:{elements:l}})),l.push(n)}else p.push(n)}),p}return _}},function(n,e,a){var t={checkbox:a(22),range:a(23),text:a(24),radio:a(25),select:a(26),group:a(27)};n.exports=function(n,e){return t[n](e)}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option-check iframely-option-checkbox\\">\\n    <input type=\\"checkbox\\" class=\\"iframely-option-check__input\\" id=\\"<%- key %>\\" name=\\"<%- key %>\\"<% if (checked) { %> checked=\\"checked\\"<% } %>>\\n    <label class=\\"iframely-option-check__label\\" for=\\"<%- id %>\\">\\n        <%- label %>\\n    </label>\\n</div>\\n"\n  , __filename = "src/options/templates/checkbox.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option-check iframely-option-checkbox\\">\\n    <input type=\\"checkbox\\" class=\\"iframely-option-check__input\\" id=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\"")\n    ;  if (checked) { \n    ; __append(" checked=\\"checked\\"")\n    ;  } \n    ; __append(">\\n    <label class=\\"iframely-option-check__label\\" for=\\"")\n    ; __line = 3\n    ; __append( id )\n    ; __append("\\">\\n        ")\n    ; __line = 4\n    ; __append( label )\n    ; __append("\\n    </label>\\n</div>\\n")\n    ; __line = 7\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/checkbox.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option-check iframely-option-checkbox\\">\\n    <input type=\\"checkbox\\" class=\\"iframely-option-check__input\\" id=\\"'),__line=45,__append(key),__append('\\" name=\\"'),__append(key),__append('\\"'),checked&&__append(' checked=\\"checked\\"'),__append('>\\n    <label class=\\"iframely-option-check__label\\" for=\\"'),__append(id),__append('\\">\\n        '),__append(label),__append('\\n    </label>\\n</div>\\n"\n  , __filename = "src/options/templates/checkbox.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option-check iframely-option-checkbox\\">\\n    <input type=\\"checkbox\\" class=\\"iframely-option-check__input\\" id=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\"")\n    ;  if (checked) { \n    ; __append(" checked=\\"checked\\"")\n    ;  } \n    ; __append(">\\n    <label class=\\"iframely-option-check__label\\" for=\\"")\n    ; __line = 3\n    ; __append( id )\n    ; __append("\\">\\n        ")\n    ; __line = 4\n    ; __append( label )\n    ; __append("\\n    </label>\\n</div>\\n")\n    ; __line = 7\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=73;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"<%- key %>\\"><%- label %>:</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"range\\" class=\\"iframely-option__range\\" id=\\"<%- key %>\\" name=\\"<%- key %>\\" min=\\"<%- min %>\\" max=\\"<%- max %>\\" step=\\"1\\" value=\\"<%- value %>\\" style=\\"--min: <%- min %>; --max: <%- max %>; --val: <%- value %>;\\">\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/range.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"range\\" class=\\"iframely-option__range\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" min=\\"")\n    ; __append( min )\n    ; __append("\\" max=\\"")\n    ; __append( max )\n    ; __append("\\" step=\\"1\\" value=\\"")\n    ; __append( value )\n    ; __append("\\" style=\\"--min: ")\n    ; __append( min )\n    ; __append("; --max: ")\n    ; __append( max )\n    ; __append("; --val: ")\n    ; __append( value )\n    ; __append(";\\">\\n    </div>\\n</div>")\n    ; __line = 6\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/range.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"'),__line=45,__append(key),__append('\\">'),__append(label),__append(':</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"range\\" class=\\"iframely-option__range\\" id=\\"'),__append(key),__append('\\" name=\\"'),__append(key),__append('\\" min=\\"'),__append(min),__append('\\" max=\\"'),__append(max),__append('\\" step=\\"1\\" value=\\"'),__append(value),__append('\\" style=\\"--min: '),__append(min),__append("; --max: "),__append(max),__append("; --val: "),__append(value),__append(';\\">\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/range.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"range\\" class=\\"iframely-option__range\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" min=\\"")\n    ; __append( min )\n    ; __append("\\" max=\\"")\n    ; __append( max )\n    ; __append("\\" step=\\"1\\" value=\\"")\n    ; __append( value )\n    ; __append("\\" style=\\"--min: ")\n    ; __append( min )\n    ; __append("; --max: ")\n    ; __append( max )\n    ; __append("; --val: ")\n    ; __append( value )\n    ; __append(";\\">\\n    </div>\\n</div>")\n    ; __line = 6\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=80;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"<%- key %>\\"><%- label %>:</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"text\\" class=\\"iframely-option__input iframely-option__text\\" id=\\"<%- key %>\\" name=\\"<%- key %>\\" placeholder=\\"<%- placeholder %>\\" value=\\"<%- value %>\\">\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/text.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"text\\" class=\\"iframely-option__input iframely-option__text\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" placeholder=\\"")\n    ; __append( placeholder )\n    ; __append("\\" value=\\"")\n    ; __append( value )\n    ; __append("\\">\\n    </div>\\n</div>")\n    ; __line = 6\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/text.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"'),__line=45,__append(key),__append('\\">'),__append(label),__append(':</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"text\\" class=\\"iframely-option__input iframely-option__text\\" id=\\"'),__append(key),__append('\\" name=\\"'),__append(key),__append('\\" placeholder=\\"'),__append(placeholder),__append('\\" value=\\"'),__append(value),__append('\\">\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/text.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <input type=\\"text\\" class=\\"iframely-option__input iframely-option__text\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" placeholder=\\"")\n    ; __append( placeholder )\n    ; __append("\\" value=\\"")\n    ; __append( value )\n    ; __append("\\">\\n    </div>\\n</div>")\n    ; __line = 6\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=72;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <% if (label) { %>\\n        <label class=\\"iframely-option__label\\">\\n            <%- label %>:\\n        </label>\\n    <% } %>\\n    <div class=\\"iframely-option__group<% if (inline) { %> iframely-option__group-inline<% } %>\\">\\n        <% items.forEach(function(subContext) { %>\\n            <div class=\\"iframely-option-check iframely-option-radio\\">\\n                <input type=\\"radio\\" class=\\"iframely-option-check__input\\" id=\\"<%- subContext.id %>\\" name=\\"<%- key %>\\" value=\\"<%- subContext.value %>\\"<% if (subContext.checked) { %> checked=\\"checked\\"<% } %>>\\n                <label class=\\"iframely-option-check__label\\" for=\\"<%- subContext.id %>\\">\\n                        <%- subContext.label %>\\n                </label>\\n            </div>\\n        <% }); %>\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/radio.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    ")\n    ; __line = 2\n    ;  if (label) { \n    ; __append("\\n        <label class=\\"iframely-option__label\\">\\n            ")\n    ; __line = 4\n    ; __append( label )\n    ; __append(":\\n        </label>\\n    ")\n    ; __line = 6\n    ;  } \n    ; __append("\\n    <div class=\\"iframely-option__group")\n    ; __line = 7\n    ;  if (inline) { \n    ; __append(" iframely-option__group-inline")\n    ;  } \n    ; __append("\\">\\n        ")\n    ; __line = 8\n    ;  items.forEach(function(subContext) { \n    ; __append("\\n            <div class=\\"iframely-option-check iframely-option-radio\\">\\n                <input type=\\"radio\\" class=\\"iframely-option-check__input\\" id=\\"")\n    ; __line = 10\n    ; __append( subContext.id )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" value=\\"")\n    ; __append( subContext.value )\n    ; __append("\\"")\n    ;  if (subContext.checked) { \n    ; __append(" checked=\\"checked\\"")\n    ;  } \n    ; __append(">\\n                <label class=\\"iframely-option-check__label\\" for=\\"")\n    ; __line = 11\n    ; __append( subContext.id )\n    ; __append("\\">\\n                        ")\n    ; __line = 12\n    ; __append( subContext.label )\n    ; __append("\\n                </label>\\n            </div>\\n        ")\n    ; __line = 15\n    ;  }); \n    ; __append("\\n    </div>\\n</div>")\n    ; __line = 17\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/radio.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append("module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      \"&\": \"&amp;\"\n    , \"<\": \"&lt;\"\n    , \">\": \"&gt;\"\n    , '\"': \"&#34;\"\n    , \"'\": \"&#39;\"\n    }\n  , _MATCH_HTML = /[&<>'\"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = \"<div class=\\\"iframely-option\\\">\\n    "),__line=45,label&&(__append('\\n        <label class=\\"iframely-option__label\\">\\n            '),__append(label),__append(":\\n        </label>\\n    ")),__append('\\n    <div class=\\"iframely-option__group'),inline&&__append(" iframely-option__group-inline"),__append('\\">\\n        '),items.forEach(function(n){__append('\\n            <div class=\\"iframely-option-check iframely-option-radio\\">\\n                <input type=\\"radio\\" class=\\"iframely-option-check__input\\" id=\\"'),__append(n.id),__append('\\" name=\\"'),__append(key),__append('\\" value=\\"'),__append(n.value),__append('\\"'),n.checked&&__append(' checked=\\"checked\\"'),__append('>\\n                <label class=\\"iframely-option-check__label\\" for=\\"'),__append(n.id),__append('\\">\\n                        '),__append(n.label),__append("\\n                </label>\\n            </div>\\n        ")}),__append('\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/radio.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    ")\n    ; __line = 2\n    ;  if (label) { \n    ; __append("\\n        <label class=\\"iframely-option__label\\">\\n            ")\n    ; __line = 4\n    ; __append( label )\n    ; __append(":\\n        </label>\\n    ")\n    ; __line = 6\n    ;  } \n    ; __append("\\n    <div class=\\"iframely-option__group")\n    ; __line = 7\n    ;  if (inline) { \n    ; __append(" iframely-option__group-inline")\n    ;  } \n    ; __append("\\">\\n        ")\n    ; __line = 8\n    ;  items.forEach(function(subContext) { \n    ; __append("\\n            <div class=\\"iframely-option-check iframely-option-radio\\">\\n                <input type=\\"radio\\" class=\\"iframely-option-check__input\\" id=\\"")\n    ; __line = 10\n    ; __append( subContext.id )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\" value=\\"")\n    ; __append( subContext.value )\n    ; __append("\\"")\n    ;  if (subContext.checked) { \n    ; __append(" checked=\\"checked\\"")\n    ;  } \n    ; __append(">\\n                <label class=\\"iframely-option-check__label\\" for=\\"")\n    ; __line = 11\n    ; __append( subContext.id )\n    ; __append("\\">\\n                        ")\n    ; __line = 12\n    ; __append( subContext.label )\n    ; __append("\\n                </label>\\n            </div>\\n        ")\n    ; __line = 15\n    ;  }); \n    ; __append("\\n    </div>\\n</div>")\n    ; __line = 17\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=95;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"<%- key %>\\"><%- label %>:</label>\\n    <div class=\\"iframely-option__group\\">\\n        <select class=\\"iframely-option__input iframely-option__select\\" id=\\"<%- key %>\\" name=\\"<%- key %>\\">\\n            <% items.forEach(function(subContext) { %>\\n                <option value=\\"<%- subContext.value %>\\"<% if (subContext.checked) { %> selected=\\"selected\\"<% } %>><%- subContext.label %></option>\\n            <% }); %>\\n        </select>\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/select.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <select class=\\"iframely-option__input iframely-option__select\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\">\\n            ")\n    ; __line = 5\n    ;  items.forEach(function(subContext) { \n    ; __append("\\n                <option value=\\"")\n    ; __line = 6\n    ; __append( subContext.value )\n    ; __append("\\"")\n    ;  if (subContext.checked) { \n    ; __append(" selected=\\"selected\\"")\n    ;  } \n    ; __append(">")\n    ; __append( subContext.label )\n    ; __append("</option>\\n            ")\n    ; __line = 7\n    ;  }); \n    ; __append("\\n        </select>\\n    </div>\\n</div>")\n    ; __line = 10\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/select.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"'),__line=45,__append(key),__append('\\">'),__append(label),__append(':</label>\\n    <div class=\\"iframely-option__group\\">\\n        <select class=\\"iframely-option__input iframely-option__select\\" id=\\"'),__append(key),__append('\\" name=\\"'),__append(key),__append('\\">\\n            '),items.forEach(function(n){__append('\\n                <option value=\\"'),__append(n.value),__append('\\"'),n.checked&&__append(' selected=\\"selected\\"'),__append(">"),__append(n.label),__append("</option>\\n            ")}),__append('\\n        </select>\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/select.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <label class=\\"iframely-option__label\\" for=\\"")\n    ; __line = 2\n    ; __append( key )\n    ; __append("\\">")\n    ; __append( label )\n    ; __append(":</label>\\n    <div class=\\"iframely-option__group\\">\\n        <select class=\\"iframely-option__input iframely-option__select\\" id=\\"")\n    ; __line = 4\n    ; __append( key )\n    ; __append("\\" name=\\"")\n    ; __append( key )\n    ; __append("\\">\\n            ")\n    ; __line = 5\n    ;  items.forEach(function(subContext) { \n    ; __append("\\n                <option value=\\"")\n    ; __line = 6\n    ; __append( subContext.value )\n    ; __append("\\"")\n    ;  if (subContext.checked) { \n    ; __append(" selected=\\"selected\\"")\n    ;  } \n    ; __append(">")\n    ; __append( subContext.label )\n    ; __append("</option>\\n            ")\n    ; __line = 7\n    ;  }); \n    ; __append("\\n        </select>\\n    </div>\\n</div>")\n    ; __line = 10\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=83;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}},function(module,exports){module.exports=function anonymous(locals,escapeFn,include,rethrow){rethrow=rethrow||function(n,e,a,t,_){var r=e.split("\n"),i=Math.max(t-3,0),l=Math.min(r.length,t+3),p=_(a),o=r.slice(i,l).map(function(n,e){var a=e+i+1;return(a==t?" >> ":"    ")+a+"| "+n}).join("\n");throw n.path=p,n.message=(p||"ejs")+":"+t+"\n"+o+"\n\n"+n.message,n},escapeFn=escapeFn||function(n){return null==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g;function encode_char(n){return _ENCODE_HTML_RULES[n]||n}var __line=1,__lines='module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <div class=\\"iframely-option__group\\">\\n        <%= elementsHtml %>\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/group.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <div class=\\"iframely-option__group\\">\\n        ")\n    ; __line = 3\n    ; __append(escapeFn( elementsHtml ))\n    ; __append("\\n    </div>\\n</div>")\n    ; __line = 5\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}',__filename="src/options/templates/group.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('module.exports = function anonymous(locals, escapeFn, include, rethrow\n/*``*/) {\nrethrow = rethrow || function rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split(\'\\n\');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? \' >> \' : \'    \')\n      + curr\n      + \'| \'\n      + line;\n  }).join(\'\\n\');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || \'ejs\') + \':\'\n    + lineno + \'\\n\'\n    + context + \'\\n\\n\'\n    + err.message;\n\n  throw err;\n};\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? \'\'\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\nvar __line = 1\n  , __lines = "<div class=\\"iframely-option\\">\\n    <div class=\\"iframely-option__group\\">\\n        '),__line=45,__append(escapeFn(elementsHtml)),__append('\\n    </div>\\n</div>"\n  , __filename = "src/options/templates/group.ejs";\ntry {\n  var __output = [], __append = __output.push.bind(__output);\n  with (locals || {}) {\n    ; __append("<div class=\\"iframely-option\\">\\n    <div class=\\"iframely-option__group\\">\\n        ")\n    ; __line = 3\n    ; __append(escapeFn( elementsHtml ))\n    ; __append("\\n    </div>\\n</div>")\n    ; __line = 5\n  }\n  return __output.join("");\n} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n\n}'),__line=61;return __output.join("")}catch(e){rethrow(e,__lines,__filename,__line,escapeFn)}}}]);